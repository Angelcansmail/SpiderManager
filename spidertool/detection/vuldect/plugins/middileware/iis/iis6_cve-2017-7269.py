#!/usr/bin/env python
# encoding: utf-8

'''
影响范围：Windows Server 2003 R2 iis6
https://blog.csdn.net/darkhq/article/details/79127820
'''

from ..t import T
import requests
requests.packages.urllib3.disable_warnings()

import subprocess


class P(T):
    def __init__(self):
        T.__init__(self)

    def verify(self,head='',context='',ip='',port='',productname={},keywords='',hackresults=''):
        timeout=5
        if int(port) == 443:
            protocal = "https"
        else:
            protocal = "http"
        target_url = protocal + "://"+ip+":"+port+'/'

        result = {}
        result['result']=False

        try:
            myout =  subprocess.check_output(['curl', '--connect-timeout', '2', '--max-time', '2', '-s','-I', '-X', 'PROPFIND',target_url])
            if "HTTP/1.1 411 Length Required" in myout:
                result['result']=True
                result['VerifyInfo'] = {}
                result['VerifyInfo']['type']='iis command execute Vulnerability'
                result['VerifyInfo']['URL'] =target_url
                # CVE-2017-7269 Microsoft IIS WebDav ScStoragePathFromUrl Overflow
                result['VerifyInfo']['payload']= 'iis_cve-2017-7269 Vulnerability'
                result['VerifyInfo']['level']= '高危(HOLE)'
                result['VerifyInfo']['hole_id']= 'CVE-2017-7269'
                result['VerifyInfo']['result'] = r.content
        except Exception,e:
            #print '[-]error',
            print e.text
            #pass
            #print traceback.print_exc()
        finally:
            return result


if __name__ == '__main__':
    # {'result': True, 'VerifyInfo': {'URL': 'http://122.224.58.215:80/', 'type': 'command execute Vulnerability', 'payload': 'iis_cve-2017-7269 Vulnerability', 'level': '高危(HOLE)'}}
    print P().verify(ip='122.224.58.215',port='80')
