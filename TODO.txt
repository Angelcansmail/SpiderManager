-------------------------------------20180831建立更新-------------------------------------
1:IP地址库的收集，跟任务管理联动，扫描。

2：Geo信息的获取
   现有结果：界面及接口已经完成，等张聪这边的数据传入
   预期结果：可以随着用户检索结果，动态变更地理位置信息，并将经纬度信息填入页面展示 

3：参照FOFA编写语法规则，写明字段含义与使用方式
   现有结果：不支持
   预期结果：参照FOFAhttps://fofa.so/的语法规则

4：把漏洞网站信息status=200的列表显示出来
   现有结果：json结构
	{'115.182.216.14:443': [{'status': 302, 'url': '115.182.216.14:443/examples'}, {'status': 200, 'url': '115.182.216.14:443/examples/servlets/servlet/SessionExample'}]}
   预期结果：一个状态为200的url列表
   	115.182.216.14:443/examples/servlets/servlet/SessionExample
	...

5：检索结果信息可以导出为文件，方便用户进行二次验证
   现有结果：不支持
   预期结果：在第2步基础上引入导出机制，形成excel，用户直接使用进行深层验证

6：在主页面显示出近期或者频繁访问的ip/port等相关信息
   现有结果：不支持
   预期结果：参照FOFA主页面情况，分列展示最近前十的相关信息


7：任务管理功能
   现有结果：支持新建、暂停任务功能，对于删除和挂起（局部暂停，已经完成的任务无需修改状态））任务不支持
   预期结果：新建、删除、挂起、暂停任务均支持

8：ES检索的同步删除
   现有结果：只有增量更新；调研网上相关内容，貌似没有太好的方法
   预期结果：做到增量、递减同步更新

9：检测功能补充
   现有结果：不支持
   预期结果：
   	1）对于常见的sql、ssh、ftp等进行弱检测，查看是否存在注入漏洞；
	2）完善网站潜在配置连接导致的注入风险url后缀；针对中非保障中的重保网站，利用awvs检测的结果与目前系统给到的可能存在的高危漏洞网址结果一致，但是目前系统不能给出问题归类，后期调研下awvs的风险归类，不断补充我们的系统库中，同时完善系统检测的规则库实现效率的提升；
	3）学习了解weblogic、structs等高频漏洞攻击，加入到系统中，实现攻击信息的检测，方便后期用户直接使用检索结果进行验证即可；设计引入接口，可以实现随时上传新发现的漏洞见本，其他用户直接使用即可，无需重复配置环境，运行脚本。
	4）补充完善

10：数据分析

-------------------------------------201809xx建立更新-------------------------------------
